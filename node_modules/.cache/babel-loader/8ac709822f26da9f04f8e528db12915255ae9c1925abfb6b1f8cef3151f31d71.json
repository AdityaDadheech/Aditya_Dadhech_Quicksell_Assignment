{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krishna\\\\Desktop\\\\QuickSell-KanbanBoard-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport KanbanBoard from './components/KanbanBoard/KanbanBoard';\nimport Options from './components/Filter/Options';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [displayMode, setDisplayMode] = useState('status');\n  const [sortOption, setSortOption] = useState('priority');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const ticketResponse = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        const ticketData = await ticketResponse.json();\n        setTickets(ticketData.tickets);\n        const usersResponse = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        const userData = await usersResponse.json();\n        setUsers(userData.users);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleDisplayModeChange = mode => {\n    setDisplayMode(mode);\n  };\n  const handleSortOptionChange = option => {\n    setSortOption(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Options, {\n      onDisplayModeChange: handleDisplayModeChange,\n      onSortOptionChange: handleSortOptionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KanbanBoard, {\n      tickets: tickets,\n      users: users,\n      displayMode: displayMode,\n      sortOption: sortOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NS2AqbXzV3/J2g16H40Z5fdIyIs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","KanbanBoard","Options","jsxDEV","_jsxDEV","App","_s","tickets","setTickets","users","setUsers","displayMode","setDisplayMode","sortOption","setSortOption","fetchData","ticketResponse","fetch","ticketData","json","usersResponse","userData","error","console","handleDisplayModeChange","mode","handleSortOptionChange","option","className","children","onDisplayModeChange","onSortOptionChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Krishna/Desktop/QuickSell-KanbanBoard-main/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport KanbanBoard from './components/KanbanBoard/KanbanBoard';\nimport Options from './components/Filter/Options';\n\nconst App = () => {\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [displayMode, setDisplayMode] = useState('status'); \n  const [sortOption, setSortOption] = useState('priority'); \n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const ticketResponse = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        const ticketData = await ticketResponse.json();\n        setTickets(ticketData.tickets);\n\n        const usersResponse = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        const userData = await usersResponse.json();\n        setUsers(userData.users);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  \n  const handleDisplayModeChange = (mode) => {\n    setDisplayMode(mode);\n  };\n\n  const handleSortOptionChange = (option) => {\n    setSortOption(option);\n  };\n\n  return (\n    <div className=\"App\">\n      <Options onDisplayModeChange={handleDisplayModeChange} onSortOptionChange={handleSortOptionChange} />\n      <KanbanBoard\n        tickets={tickets}\n        users={users}\n        displayMode={displayMode}\n        sortOption={sortOption}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAOC,OAAO,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,QAAQ,CAAC;EACxD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,UAAU,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,cAAc,GAAG,MAAMC,KAAK,CAAC,0DAA0D,CAAC;QAC9F,MAAMC,UAAU,GAAG,MAAMF,cAAc,CAACG,IAAI,CAAC,CAAC;QAC9CX,UAAU,CAACU,UAAU,CAACX,OAAO,CAAC;QAE9B,MAAMa,aAAa,GAAG,MAAMH,KAAK,CAAC,0DAA0D,CAAC;QAC7F,MAAMI,QAAQ,GAAG,MAAMD,aAAa,CAACD,IAAI,CAAC,CAAC;QAC3CT,QAAQ,CAACW,QAAQ,CAACZ,KAAK,CAAC;MAC1B,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMS,uBAAuB,GAAIC,IAAI,IAAK;IACxCb,cAAc,CAACa,IAAI,CAAC;EACtB,CAAC;EAED,MAAMC,sBAAsB,GAAIC,MAAM,IAAK;IACzCb,aAAa,CAACa,MAAM,CAAC;EACvB,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA,CAACF,OAAO;MAAC4B,mBAAmB,EAAEN,uBAAwB;MAACO,kBAAkB,EAAEL;IAAuB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrG/B,OAAA,CAACH,WAAW;MACVM,OAAO,EAAEA,OAAQ;MACjBE,KAAK,EAAEA,KAAM;MACbE,WAAW,EAAEA,WAAY;MACzBE,UAAU,EAAEA;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA5CID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}